plugins {
    id "java"
    id "application"

    id "org.springframework.boot" version "2.4.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

def projectJdkVersion = 16

allprojects {
    group = "com.github.tt4g.spring.webflux.mdc.trace.example"
    version "0.1.0"

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        // Set `--release <JDK_VERSION>` option arguments of `javac`.
        options.release.set(projectJdkVersion)
        options.encoding = "UTF-8"
        options.compilerArgs += "-Xlint:all"
    }

    plugins.withId("java") {
        java {
            // Specify JDK version on Gradle 7.
            // https://docs.gradle.org/7.0/userguide/toolchains.html
            toolchain {
                languageVersion = JavaLanguageVersion.of(projectJdkVersion)
                vendor = JvmVendorSpec.ADOPTOPENJDK
                implementation = JvmImplementation.VENDOR_SPECIFIC
            }
        }
        configurations {
            // Exclude junit-vintage
            all*.exclude(group: "org.junit.vintage", module: "junit-vintage-engine")
        }
    }

    configurations {
        // Exclude from org.springframework.boot:spring-boot-starter-test
        all*.exclude(group: "org.junit.vintage", module: "junit-vintage-engine")
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.session:spring-session-core")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.projectreactor:reactor-test")
}

// plugin: org.springframework.boot
bootJar {
    mainClassName = "com.github.tt4g.spring.webflux.mdc.trace.example.App"
    archiveClassifier = "boot"
}

test {
    useJUnitPlatform()
}
